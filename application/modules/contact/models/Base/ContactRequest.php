<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class Contact_Model_Base_ContactRequest extends Doctrine_Record
{
	public function setTableDefinition(){
	    $this->setTableName('contact_request');
		$this->hasColumn('id', 'integer', 11, array('type'=>'integer', 'length'=>11, 'primary' => true,'autoincrement' => true));
		$this->hasColumn('email', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('first_name', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('last_name', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('address_line_1', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('address_line_2', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('city', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('state', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('country', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('phone', 'string', 20,array('type' => 'string','length' => 20));
		$this->hasColumn('zip', 'string', 255,array('type' => 'string','length' => 255));
		$this->hasColumn('comments', 'string', null,array('type' => 'string'));
		//$this->hasColumn('unenroll_key', 'string', 255,array('type' => 'string','length' => 255));
		//$this->hasColumn('email_lists', 'string', null,array('type' => 'string'));
		//$this->hasColumn('reviewed', 'string', 1, array('type' => 'string', 'length' => 1, 'fixed' => true, 'default' => '0', 'notnull' => true));
        //$this->hasColumn('unenrolled', 'string', 1, array('type' => 'string', 'length' => 1, 'fixed' => true, 'default' => '0', 'notnull' => true));
	    $this->hasColumn('created', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
	    $this->hasColumn('updated', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
	}

	public function setUp(){
	    $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'created'), 'updated' => array('name' => 'updated')));
	    $this->actAs($timestampable0);
        $this->actAs('SoftDelete');
	}
}
