<p>Maybe you haven't thought of it this way before, but if you are a software developer then chances are
you are required by your employeer to balance two competing requirements on your skill set.
 1.  Get it done fast.  2.  Get it done right.  <span class="more">This is a constant battle for any developer as these two requirements
  are inversly correlated.  If you have unlimited time, then you likely will be able to find the most succinct
  solution (like your personal pet projects).  If you're willing to sacrifice readability, maintainability, and reusability
  then you likely will be able to solve a problem very quickly.  Obviously the client wants it done
  quickly (cheaply) and the developer wants it done right.  The naive developer will bend to the clients wishes and apparent
  lack of budget quickly rushing their product to production, only after the site goes live and actual users
  start complaining about issues does the naive developer realize that the clients specifications were not
  comprehensive.  Clients are never happy when things don't work the way they want, even if they 
  work the way they specified.</span>
  </p>
  
  <p>I lack knowledge, or perhaps google skills, to find an industry standard term for the balance between "quick"
  and "right", but many people have <a href="http://www.satisfice.com/articles/gooden2.pdf">discussed this concept</a>
  in the context of quality.
  After browsing google and a dictionary I came up with the term "Minimally Comprehensive" (MC).  <span class="more">
  A definition of MC; a succinct solution that provides correct functionality.
  </p>
  